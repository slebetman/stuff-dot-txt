#! /usr/bin/env wish

set searchterm ""
set stuff {}
set idx none

pack [ttk::frame .top] -fill x
pack [ttk::frame .bottom] -fill both -expand true
pack [ttk::frame .bottom.left] -side left -fill y
pack [ttk::frame .bottom.right] -side right -fill both -expand true

pack [ttk::label .top.l -text Search] -side left
pack [set searchbox [ttk::entry .top.search -textvariable searchterm]] \
	-side left -fill x -expand true
bind $searchbox <Escape> {set ::searchterm ""}
bind $searchbox <KeyRelease> searchStuff
pack [ttk::button .top.new -text "New" -command newNote] -side left
pack [ttk::button .top.delete -text "Delete" -command deleteNote] -side left
pack [ttk::button .top.save -text "Save" -command saveStuff] -side left

pack [set listbox [
	text .bottom.left.list \
		-width 30 \
		-yscrollcommand {$::listscroll set} \
		-cursor arrow
	]] -side left -fill y
pack [set listscroll [ttk::scrollbar .bottom.left.scroll -command {$::listbox yview}]] \
	-side left -fill y

pack [set notebox [text .bottom.right.note \
	-width 80 \
	-yscrollcommand {$::notescroll set} \
	-highlightthickness 0
]] -side left -fill both -expand 1
pack [set notescroll [ttk::scrollbar .bottom.right.scroll -command {$::notebox yview}]] \
	-side left -fill y

proc ::tk::mac::ReopenApplication {} {
	if {[wm state .] eq "withdrawn"} {
		wm state . normal
	} else {
		wm deiconify .
	}
	raise .
}

proc drawStuff {{select all}} {
	global stuff

	$::listbox configure -state normal
	$::listbox delete 0.0 end
	for {set i 1} {$i < [llength $stuff]} {incr i} {
		if {$i > 0 && ($select == "all" || [lsearch -integer -sorted $select $i] >= 0)} {
			set note [lindex $stuff $i]
			if {[lindex $note 0] != "deleted"} {
				$::listbox insert end "[lindex $note 1 0]\n" $i
				$::listbox tag configure $i -foreground blue
				$::listbox tag bind $i <Enter> [list $::listbox tag configure $i -foreground red]
				$::listbox tag bind $i <Leave> [list $::listbox tag configure $i -foreground blue]
				$::listbox tag bind $i <Button-1> [list readNote $i]
			}
		}
	}
	$::listbox configure -state disabled
}

proc searchStuff {} {
	global stuff searchterm
	
	drawStuff [lsearch -nocase -regexp -all $stuff $searchterm]
}

proc deleteNote {} {
	global idx stuff
	
	if {$idx != "none"} {
		lset stuff $idx 0 deleted
	}
	
	newNote
	drawStuff
}

proc saveStuff {} {
	set f [open ~/bin/stuff.txt w]
	serializeStuff $f
	close $f
}

proc loadStuff {} {
	set f [open ~/bin/stuff.txt]
	parseStuff $f
	close $f
	drawStuff
}

proc serializeStuff {chan} {
	global stuff idx

	set noteText [lrange [
		split [$::notebox get 0.0 end] \n
	] 0 end-1]
		
	if {$idx != "none"} {
		lset stuff $idx 1 $noteText
	} elseif {[join [string trim $noteText]] != ""} {
		set idx [llength $stuff]
		lappend stuff [list $idx $noteText]
	}
	
	foreach note $stuff {
		if {[lindex $note 0] != "deleted"} {
			puts $chan [join [lindex $note 1] \n]
			puts $chan "[string repeat _ 80]\n"
		}
	}
	
	drawStuff
}

proc readNote {i} {
	global stuff idx
	set idx $i
	
	$::notebox delete 0.0 end
	$::notebox insert end [join [
		lindex $stuff $i 1
	] \n]
}

proc newNote {} {
	global idx
	$::notebox delete 0.0 end
	set idx none
}

proc parseStuff {chan} {
	global stuff idx
	set stuff {}
	set idx none
	
	set i 0
	set note {}
	while {[gets $chan line] >= 0} {
		if {[regexp {^____+\s*$} $line]} {
			lappend stuff [list $i $note]
			set note {}
			incr i
		} elseif {[llength $note] || [regexp {\S} $line]} {
			lappend note $line
		}
	}
}

loadStuff
